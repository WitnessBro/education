openapi: 3.0.0
info:
  title: User API
  description: API для управления пользователями
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
    description: Production server
paths:
  /users:
    get:
      summary: Получить список всех пользователей
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Получить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Обновить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Пользователь успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Удалить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Пользователь успешно удален
components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - uuid
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Naruto"
        email:
          type: string
          format: email
          example: "lalka@gmail.com"